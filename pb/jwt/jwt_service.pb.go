// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jwt_service.proto

package jwt

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Psw                  string   `protobuf:"bytes,2,opt,name=psw,proto3" json:"psw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2045d0091f482a6, []int{0}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginReq) GetPsw() string {
	if m != nil {
		return m.Psw
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginReq)(nil), "jwt.LoginReq")
}

func init() { proto.RegisterFile("jwt_service.proto", fileDescriptor_e2045d0091f482a6) }

var fileDescriptor_e2045d0091f482a6 = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x2a, 0x2f, 0x89,
	0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce,
	0x2a, 0x2f, 0x91, 0xe2, 0x4c, 0x49, 0x4d, 0x83, 0xf0, 0x95, 0x0c, 0xb8, 0x38, 0x7c, 0xf2, 0xd3,
	0x33, 0xf3, 0x82, 0x52, 0x0b, 0x85, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x01, 0x2e, 0xe6, 0x82, 0xe2, 0x72, 0x09, 0x26, 0xb0,
	0x10, 0x88, 0x69, 0x64, 0xcc, 0xc5, 0xe5, 0x55, 0x5e, 0x12, 0x0c, 0x31, 0x55, 0x48, 0x95, 0x8b,
	0x15, 0xac, 0x5f, 0x88, 0x57, 0x2f, 0xab, 0xbc, 0x44, 0x0f, 0x66, 0x96, 0x14, 0xb7, 0x1e, 0xc8,
	0x8e, 0xa0, 0x82, 0xe4, 0xa0, 0xd4, 0x62, 0x25, 0x06, 0x27, 0x31, 0x2e, 0xde, 0xe4, 0xfc, 0x5c,
	0xbd, 0xf4, 0xa2, 0xd4, 0x54, 0xbd, 0xd2, 0xe2, 0xd4, 0x22, 0x27, 0x90, 0x3b, 0x02, 0x18, 0x93,
	0xd8, 0xc0, 0xae, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x19, 0x4f, 0x7f, 0x2f, 0xaa, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JwtServiceClient is the client API for JwtService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JwtServiceClient interface {
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*RpcRes, error)
}

type jwtServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJwtServiceClient(cc grpc.ClientConnInterface) JwtServiceClient {
	return &jwtServiceClient{cc}
}

func (c *jwtServiceClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*RpcRes, error) {
	out := new(RpcRes)
	err := c.cc.Invoke(ctx, "/jwt.JwtService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JwtServiceServer is the server API for JwtService service.
type JwtServiceServer interface {
	Login(context.Context, *LoginReq) (*RpcRes, error)
}

// UnimplementedJwtServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJwtServiceServer struct {
}

func (*UnimplementedJwtServiceServer) Login(ctx context.Context, req *LoginReq) (*RpcRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterJwtServiceServer(s *grpc.Server, srv JwtServiceServer) {
	s.RegisterService(&_JwtService_serviceDesc, srv)
}

func _JwtService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JwtServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jwt.JwtService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JwtServiceServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _JwtService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jwt.JwtService",
	HandlerType: (*JwtServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _JwtService_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jwt_service.proto",
}
